[project]
name = "ftw-baselines"
channels = ["conda-forge", "pytorch"]
platforms = ["linux-64", "osx-64", "osx-arm64", "win-64"]

[dependencies]
python = ">=3.11,<3.13"
pip = "*"


# GDAL/PROJ ecosystem (critical: install together for compatibility)
gdal = ">=3.10,<3.12"
libgdal-arrow-parquet = ">=3.10,<3.12"
rasterio = ">=1.3,<2.0"
rioxarray = ">=0.15,<1.0"
fiona = ">=1.9,<2.0"
pyproj = ">=3.6,<4.0"
geopandas = ">=0.14,<2.0"

# PyTorch ecosystem (use pytorch channel for better CUDA support)
pytorch = ">=2.4,<2.8"
torchvision = ">=0.19,<0.23"
pytorch-lightning = ">=2.0,<2.6"
kornia = ">=0.7,<1.0"
tensorboard = ">=2.15,<3.0"

[pypi-dependencies]
ftw-tools = "*"
fiboa-cli = "==0.7.0"

# General-purpose Python packages
notebook = ">=7.0,<8.0"
click = ">=8.2.1,<9.0"
tqdm = ">=4.65,<5.0"
pyyaml = ">=6.0,<7.0"
wget = "*"
numpy = ">=1.24,<3.0"
scipy = ">=1.11,<2.0"
matplotlib = ">=3.7,<4.0"
tenacity = ">=9.1.2,<10.0"
pyarrow = "==16.1.0"  # CRITICAL: filesystem registration error with newer versions, see https://github.com/apache/arrow/issues/44696
dask = ">=2025.5.1"
distributed = ">=2025.3.0,<2026.0"

# Geo packages
pystac = ">=1.8,<2.0"
planetary-computer = ">=1.0,<2.0"
odc-stac = ">=0.4.0,<1.0"  # see https://github.com/fieldsoftheworld/ftw-baselines/issues/77
torchgeo = ">=0.7.0,<1.0"  # see https://github.com/fieldsoftheworld/ftw-baselines/issues/79

[feature.delineate-anything.pypi-dependencies]
ultralytics = ">=8.3.187,<9"

[feature.dev.pypi-dependencies]
build = "*"

[feature.dev.dependencies]
ruff = ">=0.1,<1.0"
pytest = ">=7.4,<9.0"
pre-commit = ">=4.0,<=5.0"
hatchling = "*"
nushell = "*"
pixi-pycharm = ">=0.0.8,<0.0.9"

[system-requirements]
cuda = "12"

[environments]
default = {solve-group = "default"}
dev = {features = ["dev", "delineate-anything"], solve-group = "default"}
delineate-anything = {features = ["delineate-anything"], solve-group = "default"}

[tasks]
# Code quality
format = "ruff format ftw_tools/"
lint = "ruff check ftw_tools/ --fix --select I"
test = "pytest tests/"
check-all = {depends-on = ["format", "lint", "test"]}

# Build tasks
populate-deps = "nu scripts/build_dependencies.nu"
backup-pyproject = "cp pyproject.toml pyproject.toml.backup"
restore-pyproject = "mv pyproject.toml.backup pyproject.toml"
build-package = "python -m build"
build = {depends-on = ["backup-pyproject", "populate-deps", "build-package"], cmd = "pixi run restore-pyproject"}

# FTW commands
ftw = "ftw"
install-dev = "python -m pip install -e ."