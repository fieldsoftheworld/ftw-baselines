[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "ftw"
version = "0.4"
description = "Fields of The World (FTW) - Codebase"
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
dependencies = [
    "click",                   # For CLI functionality
    "tqdm",                    # For progress bars
    "geopandas",               # For geospatial data handling
    "rasterio",                # For raster data
    "numpy",                   # For numerical computation
    "matplotlib",              # For plotting
    "torch",                   # For deep learning
    "kornia",                  # For computer vision
    "torchvision",             # For vision-related tasks in PyTorch
    "pytorch-lightning",       # For high-level PyTorch training loops
    "PyYAML",                  # For parsing YAML config files
    "wget",                    # For file downloads
    # pyarrow or later lead to an filesystem error in the fit function:
    # Error: Attempted to register factory for scheme 'file' but that scheme is already registered.
    "pyarrow==16.0.0",         # For in-memory data processing
    "odc-stac",                # For handling STAC data via Open Data Cube
    "planetary-computer",      # For accessing Planetary Computer STAC data
    "pystac",                  # For reading STAC
    "rioxarray",               # For raster data handling
    "scipy",                   # For scientific computing
    "tensorboard",             # For PyTorch logging
    "torchgeo",                # For geospatial deep learning
    "fiona",                   # For reading/writing vector data
    "pyproj",                  # For projections and CRSes
    "fiboa-cli==0.7.0",        # For storing data in Fiboa format
]

[project.optional-dependencies]
dev = [
    "black",       # Code formatting tool
    "isort",       # Import sorting tool
    "mypy",        # Static type checker
    "pydocstyle",  # Python docstring style checker
    "flake8",      # Linter for Python
    "pytest",      # Testing framework
]

[project.scripts]
ftw = "ftw_cli.cli:ftw"

[tool.setuptools]
packages = { find = { where = ["src"] } }
include-package-data = true  # Includes non-Python files specified in MANIFEST.in

[tool.black]
target-version = ["py310"]
color = true
skip_magic_trailing_comma = true

[tool.isort]
profile = "black"
known_first_party = ["ftw"]
skip_gitignore = true
color_output = true

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
show_error_codes = true
exclude = "(data|configs)/"
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true

[tool.pydocstyle]
convention = "google"
match_dir = "(ftw)"

[tool.pytest.ini_options]
pythonpath = [
  "src",
]
